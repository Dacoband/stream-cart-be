version: '3.8'
services:
  # postgres:
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
      
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  account-service:
    build: 
     context: ./src  
     dockerfile: ./AccountService/AccountService.Api/Dockerfile 
    ports:
      - "7022:80"
    environment:
        - ASPNETCORE_URLS=http://+:80
        - ASPNETCORE_ENVIRONMENT=Development 
        # - ASPNETCORE_HTTPS_PORT=7022
        # - ASPNETCORE_Kestrel__Certificates__Default__Password=12345
        # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx 
        - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
        - RabbitMQ__Host=rabbitmq
        - RabbitMQ__Username=${RABBITMQ_USERNAME}
        - RabbitMQ__Password=${RABBITMQ_PASSWORD}
    # volumes:
    #    - ${USERPROFILE}/.aspnet/https:/https:ro 
    depends_on:
      # postgres:
      #   condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
  api-gateway:
    build:
      context: ./src
      dockerfile: ./ApiGateway/ApiGateway/Dockerfile
    ports:
      - "8000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - account-service
    restart: unless-stopped
    
volumes:
  postgres_data:
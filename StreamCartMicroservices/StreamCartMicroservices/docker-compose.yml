#version: '3.8'
services:
  # postgres:
  #   image: postgres:latest
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
      
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  account-service:
    build: 
     context: ./src  
     dockerfile: ./AccountService/AccountService.Api/Dockerfile 
    ports:
      - "7022:80"
    environment:
        - ASPNETCORE_URLS=http://+:80
        - ASPNETCORE_ENVIRONMENT=Production  # Set to Production
        # - ASPNETCORE_HTTPS_PORT=7022
        # - ASPNETCORE_Kestrel__Certificates__Default__Password=12345
        # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx 
        - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
        - RabbitMQ__Host=rabbitmq
        - RabbitMQ__Username=${RABBITMQ_USERNAME}
        - RabbitMQ__Password=${RABBITMQ_PASSWORD}
        - JwtSettings__SecretKey=${JWT_SECRET_KEY}
        - JwtSettings__Issuer=${JWT_ISSUER}
        - JwtSettings__Audience=${JWT_AUDIENCE}
        - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
        - EMAIL_API_KEY=${EMAIL_API_KEY}
        - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
        - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
        - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
        - EMAIL_PROVIDER=${EMAIL_PROVIDER}

        # Appwrite Settings
        - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
        - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
        - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
        - APPWRITE_API_KEY=${APPWRITE_API_KEY}
    # volumes:
    #    - ${USERPROFILE}/.aspnet/https:/https:ro 
    depends_on:
      # postgres:
      #   condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost/health"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    networks:
    - app-network

  api-gateway:
    build:
      context: ./src
      dockerfile: ./ApiGateway/ApiGateway/Dockerfile
    ports:
      - "8000:80"
     # - "443:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - Logging__LogLevel__Default=Debug
      - Logging__LogLevel__Microsoft=Warning
      - Logging__LogLevel__Ocelot=Debug
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}
      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
    depends_on:
      - account-service
      - product-service
      - shop-service
      - order-service
      - payment-service
      - livestream-service
    restart: unless-stopped
    networks:
    - app-network
   # Product Service (Mới thêm)
  product-service:
    build:
      context: ./src
      dockerfile: ./ProductService/ProductService.Api/Dockerfile
    ports:
      - "7005:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}

      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
 
      - ServiceUrls__ShopService=http://shop-service
      # - ServiceUrls__AccountService=http://account-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
    - app-network
  shop-service:
    build:
      context: ./src
      dockerfile: ./ShopService/ShopService.Api/Dockerfile
    ports:
      - "7077:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}

      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
 
      - ServiceUrls__AccountService=http://account-service
      - ServiceUrls__ProductService=http://product-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
    - app-network
    
  order-service:
    build:
      context: ./src
      dockerfile: ./OrderService/OrderService.Api/Dockerfile
    ports:
      - "7135:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}
      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
      # Service URLs
      - ServiceUrls__ProductService=http://product-service
      - ServiceUrls__ShopService=http://shop-service
      - ServiceUrls__AccountService=http://account-service
      - ServiceUrls__PaymentService=http://payment-service
      #Delivery Service
      - API_TOKEN_GHN=&{API_TOKEN_GHN}
      - GHN_SHOPID=${GHN_SHOPID}
    depends_on:
      rabbitmq:
        condition: service_healthy
      product-service:
        condition: service_started
      shop-service:
        condition: service_started
    restart: unless-stopped
    networks:
    - app-network

  payment-service:
    build:
      context: ./src
      dockerfile: ./PaymentService/PaymentService.Api/Dockerfile
    ports:
      - "7021:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}
      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
      # Service URLs - Liên kết với các service khác
      - ServiceUrls__OrderService=http://order-service
      - ServiceUrls__AccountService=http://account-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-service:
        condition: service_started
    restart: unless-stopped
    networks:
    - app-network

  cart-service:
    build:
      context: ./src
      dockerfile: ./CartService/CartService.Api/Dockerfile
    ports:
      - "7228:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}
      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
      # Service URLs
      - ServiceUrls__ProductService=http://product-service
      - ServiceUrls__ShopService=http://shop-service
      - ServiceUrls__AccountService=http://account-service
      - ServiceUrls__PaymentService=http://payment-service
      #Delivery Service
      - API_TOKEN_GHN=&{API_TOKEN_GHN}
      - GHN_SHOPID=${GHN_SHOPID}
    depends_on:
      rabbitmq:
        condition: service_healthy
      product-service:
        condition: service_started
      shop-service:
        condition: service_started
    restart: unless-stopped
    networks:
    - app-network
   
  livekit:
    image: livekit/livekit-server:latest
    ports:
      - "7880:7880"
      - "7881:7881"
      - "5349:5349/udp"
      - "3478:3478/udp"
      - "9751:9751"
    volumes:
      - ./Livekit.yaml:/etc/Livekit.yaml
    command: --dev --config /etc/Livekit.yaml 
    networks:
      - app-network
    


  livestream-service:
    build:
      context: ./src
      dockerfile: ./LivestreamService/LivestreamService.Api/Dockerfile
    ports:
      - "7041:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=${RABBITMQ_USERNAME}
      - RabbitMQ__Password=${RABBITMQ_PASSWORD}
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER}
      # Appwrite Settings
      - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
      - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
      - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
      - APPWRITE_API_KEY=${APPWRITE_API_KEY}
      # LiveKit Settings - These are the critical settings to fix the 404 error
      - LiveKit__Url=${LIVEKIT_URL}
      - LiveKit__ApiKey=${LIVEKIT_API_KEY}
      - LiveKit__ApiSecret=${LIVEKIT_API_SECRET}
      # Service URLs
      - ServiceUrls__ShopService=http://shop-service
      - ServiceUrls__AccountService=http://account-service
      - ServiceUrls__ProductService=http://product-service
      # SignalR Configuration
      - SignalR__EnableDetailedErrors=true
      - SignalR__MaxReceiveMessageSize=32768
      - SignalR__ClientTimeoutInterval=60
      - SignalR__KeepAliveInterval=30
      - MONGO_CONNECTION_STRING=${MONGO_CONNECTION_STRING}

      # Chat Configuration
      - Chat__MaxMessageLength=2000
      - Chat__MaxAttachmentSize=10485760 # 10MB
      - Chat__AllowedFileTypes=image/jpeg,image/png,image/gif,application/pdf
    depends_on:
      rabbitmq:
        condition: service_healthy
      shop-service:
        condition: service_started
      account-service:
        condition: service_started
      livekit:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    
  
  
  delivery-service:
      build:
        context: ./src
        dockerfile: ./DeliveryService/DeliveryService.Api/Dockerfile
      ports:
        - "7202:80"
      environment:
        - ASPNETCORE_URLS=http://+:80
        - ASPNETCORE_ENVIRONMENT=Production
        - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
        - RabbitMQ__Host=rabbitmq
        - RabbitMQ__Username=${RABBITMQ_USERNAME}
        - RabbitMQ__Password=${RABBITMQ_PASSWORD}
        - JwtSettings__SecretKey=${JWT_SECRET_KEY}
        - JwtSettings__Issuer=${JWT_ISSUER}
        - JwtSettings__Audience=${JWT_AUDIENCE}
        - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
        - EMAIL_API_KEY=${EMAIL_API_KEY}
        - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
        - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
        - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
        - EMAIL_PROVIDER=${EMAIL_PROVIDER}
        # Appwrite Settings
        - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
        - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
        - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
        - APPWRITE_API_KEY=${APPWRITE_API_KEY}
        # Service URLs
        - ServiceUrls__ProductService=http://product-service
        - ServiceUrls__ShopService=http://shop-service
        - ServiceUrls__AccountService=http://account-service
        - ServiceUrls__PaymentService=http://payment-service
        #Delivery Service
        - API_TOKEN_GHN=&{API_TOKEN_GHN}
        - GHN_SHOPID=${GHN_SHOPID}
      depends_on:
        rabbitmq:
          condition: service_healthy
        product-service:
          condition: service_started
        shop-service:
          condition: service_started
        order-service:
           condition: service_started
        payment-service:
           condition: service_started
      restart: unless-stopped
      networks:
        - app-network
  notification-service:
    build:
      context: ./src
      dockerfile: ./NotificationService/Notification.Api/Dockerfile
    ports:
      - "7078:80"  # Cổng public:container, bạn có thể thay 7077 nếu cần
    environment:
        - ASPNETCORE_URLS=http://+:80
        - ASPNETCORE_ENVIRONMENT=Production
        - ConnectionStrings__PostgreSQL=Host=160.187.241.81;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
        - RabbitMQ__Host=rabbitmq
        - RabbitMQ__Username=${RABBITMQ_USERNAME}
        - RabbitMQ__Password=${RABBITMQ_PASSWORD}
        - JwtSettings__SecretKey=${JWT_SECRET_KEY}
        - JwtSettings__Issuer=${JWT_ISSUER}
        - JwtSettings__Audience=${JWT_AUDIENCE}
        - JwtSettings__ExpiryMinutes=${JWT_EXPIRY_MINUTES}
        - EMAIL_API_KEY=${EMAIL_API_KEY}
        - EMAIL_SECRET_KEY=${EMAIL_SECRET_KEY}
        - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
        - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
        - EMAIL_PROVIDER=${EMAIL_PROVIDER}
        # Appwrite Settings
        - APPWRITE_PROJECT_ID=${APPWRITE_PROJECT_ID}
        - APPWRITE_ENDPOINT=${APPWRITE_ENDPOINT}
        - APPWRITE_BUCKET_ID=${APPWRITE_BUCKET_ID}
        - APPWRITE_API_KEY=${APPWRITE_API_KEY}
        # Service URLs
        - ServiceUrls__ProductService=http://product-service
        - ServiceUrls__ShopService=http://shop-service
        - ServiceUrls__AccountService=http://account-service
        - ServiceUrls__PaymentService=http://payment-service
        #Delivery Service
        - API_TOKEN_GHN=&{API_TOKEN_GHN}
        - GHN_SHOPID=${GHN_SHOPID}      
        - ConnectionStrings__MongoDB=${MONGO_CONNECTION_STRING}
      # hoặc PostgreSQL
      # - ConnectionStrings__PostgreSQL=${POSTGRES_CONNECTION_STRING}

    depends_on:
       rabbitmq:
          condition: service_healthy
       product-service:
          condition: service_started
       shop-service:
          condition: service_started
       order-service:
           condition: service_started
       payment-service:
           condition: service_started
    restart: unless-stopped
    networks:
        - app-network

volumes:
  postgres_data:
networks:
  app-network:
    driver: bridge
 